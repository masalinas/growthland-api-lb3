{"swagger":"2.0","info":{"version":"1.0.0","title":"growthland-api-lb3","description":"growthland-api-lb3"},"basePath":"/api","paths":{"/Master2s":{"post":{"tags":["Master2"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Master2.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master2"}}},"deprecated":false},"patch":{"tags":["Master2"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Master2.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master2"}}},"deprecated":false},"put":{"tags":["Master2"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Master2.replaceOrCreate__put_Master2s","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master2"}}},"deprecated":false},"get":{"tags":["Master2"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Master2.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Master2"}}}},"deprecated":false}},"/Master2s/replaceOrCreate":{"post":{"tags":["Master2"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Master2.replaceOrCreate__post_Master2s_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master2"}}},"deprecated":false}},"/Master2s/upsertWithWhere":{"post":{"tags":["Master2"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Master2.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Master2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master2"}}},"deprecated":false}},"/Master2s/{id}/exists":{"get":{"tags":["Master2"],"summary":"Check whether a model instance exists in the data source.","operationId":"Master2.exists__get_Master2s_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Master2s/{id}":{"head":{"tags":["Master2"],"summary":"Check whether a model instance exists in the data source.","operationId":"Master2.exists__head_Master2s_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Master2"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Master2.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master2"}}},"deprecated":false},"put":{"tags":["Master2"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Master2.replaceById__put_Master2s_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master2"}}},"deprecated":false},"delete":{"tags":["Master2"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Master2.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Master2"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Master2.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Master2 id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Master2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master2"}}},"deprecated":false}},"/Master2s/{id}/replace":{"post":{"tags":["Master2"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Master2.replaceById__post_Master2s_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master2"}}},"deprecated":false}},"/Master2s/findOne":{"get":{"tags":["Master2"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Master2.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master2"}}},"deprecated":false}},"/Master2s/update":{"post":{"tags":["Master2"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Master2.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Master2"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Master2s/count":{"get":{"tags":["Master2"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Master2.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Master2s/change-stream":{"post":{"tags":["Master2"],"summary":"Create a change stream.","operationId":"Master2.createChangeStream__post_Master2s_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Master2"],"summary":"Create a change stream.","operationId":"Master2.createChangeStream__get_Master2s_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Masters":{"post":{"tags":["Master"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Master.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master"}}},"deprecated":false},"patch":{"tags":["Master"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Master.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master"}}},"deprecated":false},"put":{"tags":["Master"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Master.replaceOrCreate__put_Masters","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master"}}},"deprecated":false},"get":{"tags":["Master"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Master.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Master"}}}},"deprecated":false}},"/Masters/replaceOrCreate":{"post":{"tags":["Master"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Master.replaceOrCreate__post_Masters_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master"}}},"deprecated":false}},"/Masters/upsertWithWhere":{"post":{"tags":["Master"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Master.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Master"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master"}}},"deprecated":false}},"/Masters/{id}/exists":{"get":{"tags":["Master"],"summary":"Check whether a model instance exists in the data source.","operationId":"Master.exists__get_Masters_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Masters/{id}":{"head":{"tags":["Master"],"summary":"Check whether a model instance exists in the data source.","operationId":"Master.exists__head_Masters_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Master"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Master.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master"}}},"deprecated":false},"put":{"tags":["Master"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Master.replaceById__put_Masters_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master"}}},"deprecated":false},"delete":{"tags":["Master"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Master.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Master"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Master.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Master id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Master"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master"}}},"deprecated":false}},"/Masters/{id}/replace":{"post":{"tags":["Master"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Master.replaceById__post_Masters_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Master"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master"}}},"deprecated":false}},"/Masters/findOne":{"get":{"tags":["Master"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Master.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Master"}}},"deprecated":false}},"/Masters/update":{"post":{"tags":["Master"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Master.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Master"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Masters/count":{"get":{"tags":["Master"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Master.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Masters/change-stream":{"post":{"tags":["Master"],"summary":"Create a change stream.","operationId":"Master.createChangeStream__post_Masters_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Master"],"summary":"Create a change stream.","operationId":"Master.createChangeStream__get_Masters_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Archivos":{"post":{"tags":["Archivo"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Archivo.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Archivo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Archivo"}}},"deprecated":false},"patch":{"tags":["Archivo"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Archivo.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Archivo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Archivo"}}},"deprecated":false},"put":{"tags":["Archivo"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Archivo.replaceOrCreate__put_Archivos","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Archivo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Archivo"}}},"deprecated":false},"get":{"tags":["Archivo"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Archivo.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Archivo"}}}},"deprecated":false}},"/Archivos/replaceOrCreate":{"post":{"tags":["Archivo"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Archivo.replaceOrCreate__post_Archivos_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Archivo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Archivo"}}},"deprecated":false}},"/Archivos/upsertWithWhere":{"post":{"tags":["Archivo"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Archivo.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Archivo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Archivo"}}},"deprecated":false}},"/Archivos/{id}/exists":{"get":{"tags":["Archivo"],"summary":"Check whether a model instance exists in the data source.","operationId":"Archivo.exists__get_Archivos_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Archivos/{id}":{"head":{"tags":["Archivo"],"summary":"Check whether a model instance exists in the data source.","operationId":"Archivo.exists__head_Archivos_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Archivo"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Archivo.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Archivo"}}},"deprecated":false},"put":{"tags":["Archivo"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Archivo.replaceById__put_Archivos_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Archivo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Archivo"}}},"deprecated":false},"delete":{"tags":["Archivo"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Archivo.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Archivo"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Archivo.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Archivo id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Archivo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Archivo"}}},"deprecated":false}},"/Archivos/{id}/replace":{"post":{"tags":["Archivo"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Archivo.replaceById__post_Archivos_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Archivo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Archivo"}}},"deprecated":false}},"/Archivos/findOne":{"get":{"tags":["Archivo"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Archivo.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Archivo"}}},"deprecated":false}},"/Archivos/update":{"post":{"tags":["Archivo"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Archivo.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Archivo"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Archivos/count":{"get":{"tags":["Archivo"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Archivo.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Archivos/change-stream":{"post":{"tags":["Archivo"],"summary":"Create a change stream.","operationId":"Archivo.createChangeStream__post_Archivos_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Archivo"],"summary":"Create a change stream.","operationId":"Archivo.createChangeStream__get_Archivos_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Recursos":{"post":{"tags":["Recurso"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Recurso.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Recurso"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Recurso"}}},"deprecated":false},"patch":{"tags":["Recurso"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Recurso.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Recurso"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Recurso"}}},"deprecated":false},"put":{"tags":["Recurso"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Recurso.replaceOrCreate__put_Recursos","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Recurso"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Recurso"}}},"deprecated":false},"get":{"tags":["Recurso"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Recurso.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Recurso"}}}},"deprecated":false}},"/Recursos/replaceOrCreate":{"post":{"tags":["Recurso"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Recurso.replaceOrCreate__post_Recursos_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Recurso"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Recurso"}}},"deprecated":false}},"/Recursos/upsertWithWhere":{"post":{"tags":["Recurso"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Recurso.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Recurso"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Recurso"}}},"deprecated":false}},"/Recursos/{id}/exists":{"get":{"tags":["Recurso"],"summary":"Check whether a model instance exists in the data source.","operationId":"Recurso.exists__get_Recursos_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Recursos/{id}":{"head":{"tags":["Recurso"],"summary":"Check whether a model instance exists in the data source.","operationId":"Recurso.exists__head_Recursos_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Recurso"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Recurso.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Recurso"}}},"deprecated":false},"put":{"tags":["Recurso"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Recurso.replaceById__put_Recursos_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Recurso"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Recurso"}}},"deprecated":false},"delete":{"tags":["Recurso"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Recurso.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Recurso"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Recurso.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Recurso id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Recurso"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Recurso"}}},"deprecated":false}},"/Recursos/{id}/replace":{"post":{"tags":["Recurso"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Recurso.replaceById__post_Recursos_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Recurso"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Recurso"}}},"deprecated":false}},"/Recursos/findOne":{"get":{"tags":["Recurso"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Recurso.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Recurso"}}},"deprecated":false}},"/Recursos/update":{"post":{"tags":["Recurso"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Recurso.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Recurso"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Recursos/count":{"get":{"tags":["Recurso"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Recurso.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Recursos/change-stream":{"post":{"tags":["Recurso"],"summary":"Create a change stream.","operationId":"Recurso.createChangeStream__post_Recursos_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Recurso"],"summary":"Create a change stream.","operationId":"Recurso.createChangeStream__get_Recursos_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/MasterClasificacions":{"post":{"tags":["MasterClasificacion"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"MasterClasificacion.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/MasterClasificacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MasterClasificacion"}}},"deprecated":false},"patch":{"tags":["MasterClasificacion"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"MasterClasificacion.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/MasterClasificacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MasterClasificacion"}}},"deprecated":false},"put":{"tags":["MasterClasificacion"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"MasterClasificacion.replaceOrCreate__put_MasterClasificacions","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/MasterClasificacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MasterClasificacion"}}},"deprecated":false},"get":{"tags":["MasterClasificacion"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"MasterClasificacion.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/MasterClasificacion"}}}},"deprecated":false}},"/MasterClasificacions/replaceOrCreate":{"post":{"tags":["MasterClasificacion"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"MasterClasificacion.replaceOrCreate__post_MasterClasificacions_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/MasterClasificacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MasterClasificacion"}}},"deprecated":false}},"/MasterClasificacions/upsertWithWhere":{"post":{"tags":["MasterClasificacion"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"MasterClasificacion.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/MasterClasificacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MasterClasificacion"}}},"deprecated":false}},"/MasterClasificacions/{id}/exists":{"get":{"tags":["MasterClasificacion"],"summary":"Check whether a model instance exists in the data source.","operationId":"MasterClasificacion.exists__get_MasterClasificacions_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/MasterClasificacions/{id}":{"head":{"tags":["MasterClasificacion"],"summary":"Check whether a model instance exists in the data source.","operationId":"MasterClasificacion.exists__head_MasterClasificacions_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["MasterClasificacion"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"MasterClasificacion.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MasterClasificacion"}}},"deprecated":false},"put":{"tags":["MasterClasificacion"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"MasterClasificacion.replaceById__put_MasterClasificacions_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/MasterClasificacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MasterClasificacion"}}},"deprecated":false},"delete":{"tags":["MasterClasificacion"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"MasterClasificacion.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["MasterClasificacion"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"MasterClasificacion.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"MasterClasificacion id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/MasterClasificacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MasterClasificacion"}}},"deprecated":false}},"/MasterClasificacions/{id}/replace":{"post":{"tags":["MasterClasificacion"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"MasterClasificacion.replaceById__post_MasterClasificacions_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/MasterClasificacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MasterClasificacion"}}},"deprecated":false}},"/MasterClasificacions/findOne":{"get":{"tags":["MasterClasificacion"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"MasterClasificacion.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MasterClasificacion"}}},"deprecated":false}},"/MasterClasificacions/update":{"post":{"tags":["MasterClasificacion"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"MasterClasificacion.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/MasterClasificacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/MasterClasificacions/count":{"get":{"tags":["MasterClasificacion"],"summary":"Count instances of the model matched by where from the data source.","operationId":"MasterClasificacion.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/MasterClasificacions/change-stream":{"post":{"tags":["MasterClasificacion"],"summary":"Create a change stream.","operationId":"MasterClasificacion.createChangeStream__post_MasterClasificacions_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["MasterClasificacion"],"summary":"Create a change stream.","operationId":"MasterClasificacion.createChangeStream__get_MasterClasificacions_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Campannas":{"post":{"tags":["Campanna"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Campanna.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Campanna"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Campanna"}}},"deprecated":false},"patch":{"tags":["Campanna"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Campanna.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Campanna"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Campanna"}}},"deprecated":false},"put":{"tags":["Campanna"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Campanna.replaceOrCreate__put_Campannas","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Campanna"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Campanna"}}},"deprecated":false},"get":{"tags":["Campanna"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Campanna.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Campanna"}}}},"deprecated":false}},"/Campannas/replaceOrCreate":{"post":{"tags":["Campanna"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Campanna.replaceOrCreate__post_Campannas_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Campanna"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Campanna"}}},"deprecated":false}},"/Campannas/upsertWithWhere":{"post":{"tags":["Campanna"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Campanna.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Campanna"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Campanna"}}},"deprecated":false}},"/Campannas/{id}/exists":{"get":{"tags":["Campanna"],"summary":"Check whether a model instance exists in the data source.","operationId":"Campanna.exists__get_Campannas_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Campannas/{id}":{"head":{"tags":["Campanna"],"summary":"Check whether a model instance exists in the data source.","operationId":"Campanna.exists__head_Campannas_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Campanna"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Campanna.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Campanna"}}},"deprecated":false},"put":{"tags":["Campanna"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Campanna.replaceById__put_Campannas_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Campanna"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Campanna"}}},"deprecated":false},"delete":{"tags":["Campanna"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Campanna.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Campanna"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Campanna.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Campanna id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Campanna"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Campanna"}}},"deprecated":false}},"/Campannas/{id}/replace":{"post":{"tags":["Campanna"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Campanna.replaceById__post_Campannas_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Campanna"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Campanna"}}},"deprecated":false}},"/Campannas/findOne":{"get":{"tags":["Campanna"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Campanna.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Campanna"}}},"deprecated":false}},"/Campannas/update":{"post":{"tags":["Campanna"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Campanna.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Campanna"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Campannas/count":{"get":{"tags":["Campanna"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Campanna.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Campannas/change-stream":{"post":{"tags":["Campanna"],"summary":"Create a change stream.","operationId":"Campanna.createChangeStream__post_Campannas_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Campanna"],"summary":"Create a change stream.","operationId":"Campanna.createChangeStream__get_Campannas_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/CampannaFormatos":{"post":{"tags":["CampannaFormato"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"CampannaFormato.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaFormato"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaFormato"}}},"deprecated":false},"patch":{"tags":["CampannaFormato"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"CampannaFormato.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaFormato"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaFormato"}}},"deprecated":false},"put":{"tags":["CampannaFormato"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"CampannaFormato.replaceOrCreate__put_CampannaFormatos","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaFormato"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaFormato"}}},"deprecated":false},"get":{"tags":["CampannaFormato"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"CampannaFormato.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/CampannaFormato"}}}},"deprecated":false}},"/CampannaFormatos/replaceOrCreate":{"post":{"tags":["CampannaFormato"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"CampannaFormato.replaceOrCreate__post_CampannaFormatos_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaFormato"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaFormato"}}},"deprecated":false}},"/CampannaFormatos/upsertWithWhere":{"post":{"tags":["CampannaFormato"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"CampannaFormato.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/CampannaFormato"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaFormato"}}},"deprecated":false}},"/CampannaFormatos/{id}/exists":{"get":{"tags":["CampannaFormato"],"summary":"Check whether a model instance exists in the data source.","operationId":"CampannaFormato.exists__get_CampannaFormatos_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/CampannaFormatos/{id}":{"head":{"tags":["CampannaFormato"],"summary":"Check whether a model instance exists in the data source.","operationId":"CampannaFormato.exists__head_CampannaFormatos_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["CampannaFormato"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"CampannaFormato.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaFormato"}}},"deprecated":false},"put":{"tags":["CampannaFormato"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"CampannaFormato.replaceById__put_CampannaFormatos_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaFormato"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaFormato"}}},"deprecated":false},"delete":{"tags":["CampannaFormato"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"CampannaFormato.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["CampannaFormato"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"CampannaFormato.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"CampannaFormato id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/CampannaFormato"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaFormato"}}},"deprecated":false}},"/CampannaFormatos/{id}/replace":{"post":{"tags":["CampannaFormato"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"CampannaFormato.replaceById__post_CampannaFormatos_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaFormato"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaFormato"}}},"deprecated":false}},"/CampannaFormatos/findOne":{"get":{"tags":["CampannaFormato"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"CampannaFormato.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaFormato"}}},"deprecated":false}},"/CampannaFormatos/update":{"post":{"tags":["CampannaFormato"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"CampannaFormato.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/CampannaFormato"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/CampannaFormatos/count":{"get":{"tags":["CampannaFormato"],"summary":"Count instances of the model matched by where from the data source.","operationId":"CampannaFormato.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/CampannaFormatos/change-stream":{"post":{"tags":["CampannaFormato"],"summary":"Create a change stream.","operationId":"CampannaFormato.createChangeStream__post_CampannaFormatos_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["CampannaFormato"],"summary":"Create a change stream.","operationId":"CampannaFormato.createChangeStream__get_CampannaFormatos_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/CampannaPropuesta":{"post":{"tags":["CampannaPropuesta"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"CampannaPropuesta.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaPropuesta"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaPropuesta"}}},"deprecated":false},"patch":{"tags":["CampannaPropuesta"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"CampannaPropuesta.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaPropuesta"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaPropuesta"}}},"deprecated":false},"put":{"tags":["CampannaPropuesta"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"CampannaPropuesta.replaceOrCreate__put_CampannaPropuesta","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaPropuesta"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaPropuesta"}}},"deprecated":false},"get":{"tags":["CampannaPropuesta"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"CampannaPropuesta.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/CampannaPropuesta"}}}},"deprecated":false}},"/CampannaPropuesta/replaceOrCreate":{"post":{"tags":["CampannaPropuesta"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"CampannaPropuesta.replaceOrCreate__post_CampannaPropuesta_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaPropuesta"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaPropuesta"}}},"deprecated":false}},"/CampannaPropuesta/upsertWithWhere":{"post":{"tags":["CampannaPropuesta"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"CampannaPropuesta.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/CampannaPropuesta"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaPropuesta"}}},"deprecated":false}},"/CampannaPropuesta/{id}/exists":{"get":{"tags":["CampannaPropuesta"],"summary":"Check whether a model instance exists in the data source.","operationId":"CampannaPropuesta.exists__get_CampannaPropuesta_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/CampannaPropuesta/{id}":{"head":{"tags":["CampannaPropuesta"],"summary":"Check whether a model instance exists in the data source.","operationId":"CampannaPropuesta.exists__head_CampannaPropuesta_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["CampannaPropuesta"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"CampannaPropuesta.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaPropuesta"}}},"deprecated":false},"put":{"tags":["CampannaPropuesta"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"CampannaPropuesta.replaceById__put_CampannaPropuesta_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaPropuesta"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaPropuesta"}}},"deprecated":false},"delete":{"tags":["CampannaPropuesta"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"CampannaPropuesta.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["CampannaPropuesta"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"CampannaPropuesta.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"CampannaPropuesta id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/CampannaPropuesta"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaPropuesta"}}},"deprecated":false}},"/CampannaPropuesta/{id}/replace":{"post":{"tags":["CampannaPropuesta"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"CampannaPropuesta.replaceById__post_CampannaPropuesta_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CampannaPropuesta"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaPropuesta"}}},"deprecated":false}},"/CampannaPropuesta/findOne":{"get":{"tags":["CampannaPropuesta"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"CampannaPropuesta.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CampannaPropuesta"}}},"deprecated":false}},"/CampannaPropuesta/update":{"post":{"tags":["CampannaPropuesta"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"CampannaPropuesta.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/CampannaPropuesta"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/CampannaPropuesta/count":{"get":{"tags":["CampannaPropuesta"],"summary":"Count instances of the model matched by where from the data source.","operationId":"CampannaPropuesta.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/CampannaPropuesta/change-stream":{"post":{"tags":["CampannaPropuesta"],"summary":"Create a change stream.","operationId":"CampannaPropuesta.createChangeStream__post_CampannaPropuesta_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["CampannaPropuesta"],"summary":"Create a change stream.","operationId":"CampannaPropuesta.createChangeStream__get_CampannaPropuesta_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/LogActividads":{"post":{"tags":["LogActividad"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"LogActividad.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LogActividad"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LogActividad"}}},"deprecated":false},"patch":{"tags":["LogActividad"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"LogActividad.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LogActividad"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LogActividad"}}},"deprecated":false},"put":{"tags":["LogActividad"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"LogActividad.replaceOrCreate__put_LogActividads","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LogActividad"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LogActividad"}}},"deprecated":false},"get":{"tags":["LogActividad"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"LogActividad.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/LogActividad"}}}},"deprecated":false}},"/LogActividads/replaceOrCreate":{"post":{"tags":["LogActividad"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"LogActividad.replaceOrCreate__post_LogActividads_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LogActividad"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LogActividad"}}},"deprecated":false}},"/LogActividads/upsertWithWhere":{"post":{"tags":["LogActividad"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"LogActividad.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/LogActividad"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LogActividad"}}},"deprecated":false}},"/LogActividads/{id}/exists":{"get":{"tags":["LogActividad"],"summary":"Check whether a model instance exists in the data source.","operationId":"LogActividad.exists__get_LogActividads_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/LogActividads/{id}":{"head":{"tags":["LogActividad"],"summary":"Check whether a model instance exists in the data source.","operationId":"LogActividad.exists__head_LogActividads_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["LogActividad"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"LogActividad.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LogActividad"}}},"deprecated":false},"put":{"tags":["LogActividad"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"LogActividad.replaceById__put_LogActividads_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LogActividad"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LogActividad"}}},"deprecated":false},"delete":{"tags":["LogActividad"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"LogActividad.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["LogActividad"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"LogActividad.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"LogActividad id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/LogActividad"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LogActividad"}}},"deprecated":false}},"/LogActividads/{id}/replace":{"post":{"tags":["LogActividad"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"LogActividad.replaceById__post_LogActividads_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LogActividad"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LogActividad"}}},"deprecated":false}},"/LogActividads/findOne":{"get":{"tags":["LogActividad"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"LogActividad.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LogActividad"}}},"deprecated":false}},"/LogActividads/update":{"post":{"tags":["LogActividad"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"LogActividad.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/LogActividad"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/LogActividads/count":{"get":{"tags":["LogActividad"],"summary":"Count instances of the model matched by where from the data source.","operationId":"LogActividad.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/LogActividads/change-stream":{"post":{"tags":["LogActividad"],"summary":"Create a change stream.","operationId":"LogActividad.createChangeStream__post_LogActividads_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["LogActividad"],"summary":"Create a change stream.","operationId":"LogActividad.createChangeStream__get_LogActividads_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Contenedors":{"post":{"tags":["Contenedor"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Contenedor.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Contenedor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Contenedor"}}},"deprecated":false},"patch":{"tags":["Contenedor"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Contenedor.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Contenedor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Contenedor"}}},"deprecated":false},"put":{"tags":["Contenedor"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Contenedor.replaceOrCreate__put_Contenedors","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Contenedor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Contenedor"}}},"deprecated":false},"get":{"tags":["Contenedor"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Contenedor.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Contenedor"}}}},"deprecated":false}},"/Contenedors/replaceOrCreate":{"post":{"tags":["Contenedor"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Contenedor.replaceOrCreate__post_Contenedors_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Contenedor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Contenedor"}}},"deprecated":false}},"/Contenedors/upsertWithWhere":{"post":{"tags":["Contenedor"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Contenedor.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Contenedor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Contenedor"}}},"deprecated":false}},"/Contenedors/{id}/exists":{"get":{"tags":["Contenedor"],"summary":"Check whether a model instance exists in the data source.","operationId":"Contenedor.exists__get_Contenedors_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Contenedors/{id}":{"head":{"tags":["Contenedor"],"summary":"Check whether a model instance exists in the data source.","operationId":"Contenedor.exists__head_Contenedors_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Contenedor"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Contenedor.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Contenedor"}}},"deprecated":false},"put":{"tags":["Contenedor"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Contenedor.replaceById__put_Contenedors_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Contenedor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Contenedor"}}},"deprecated":false},"delete":{"tags":["Contenedor"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Contenedor.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Contenedor"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Contenedor.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Contenedor id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Contenedor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Contenedor"}}},"deprecated":false}},"/Contenedors/{id}/replace":{"post":{"tags":["Contenedor"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Contenedor.replaceById__post_Contenedors_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Contenedor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Contenedor"}}},"deprecated":false}},"/Contenedors/findOne":{"get":{"tags":["Contenedor"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Contenedor.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Contenedor"}}},"deprecated":false}},"/Contenedors/update":{"post":{"tags":["Contenedor"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Contenedor.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Contenedor"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Contenedors/count":{"get":{"tags":["Contenedor"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Contenedor.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Contenedors/change-stream":{"post":{"tags":["Contenedor"],"summary":"Create a change stream.","operationId":"Contenedor.createChangeStream__post_Contenedors_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Contenedor"],"summary":"Create a change stream.","operationId":"Contenedor.createChangeStream__get_Contenedors_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/OrdenTrabajos":{"post":{"tags":["OrdenTrabajo"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"OrdenTrabajo.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajo"}}},"deprecated":false},"patch":{"tags":["OrdenTrabajo"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"OrdenTrabajo.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajo"}}},"deprecated":false},"put":{"tags":["OrdenTrabajo"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"OrdenTrabajo.replaceOrCreate__put_OrdenTrabajos","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajo"}}},"deprecated":false},"get":{"tags":["OrdenTrabajo"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"OrdenTrabajo.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/OrdenTrabajo"}}}},"deprecated":false}},"/OrdenTrabajos/replaceOrCreate":{"post":{"tags":["OrdenTrabajo"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"OrdenTrabajo.replaceOrCreate__post_OrdenTrabajos_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajo"}}},"deprecated":false}},"/OrdenTrabajos/upsertWithWhere":{"post":{"tags":["OrdenTrabajo"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"OrdenTrabajo.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrdenTrabajo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajo"}}},"deprecated":false}},"/OrdenTrabajos/{id}/exists":{"get":{"tags":["OrdenTrabajo"],"summary":"Check whether a model instance exists in the data source.","operationId":"OrdenTrabajo.exists__get_OrdenTrabajos_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/OrdenTrabajos/{id}":{"head":{"tags":["OrdenTrabajo"],"summary":"Check whether a model instance exists in the data source.","operationId":"OrdenTrabajo.exists__head_OrdenTrabajos_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["OrdenTrabajo"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"OrdenTrabajo.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajo"}}},"deprecated":false},"put":{"tags":["OrdenTrabajo"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"OrdenTrabajo.replaceById__put_OrdenTrabajos_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajo"}}},"deprecated":false},"delete":{"tags":["OrdenTrabajo"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"OrdenTrabajo.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["OrdenTrabajo"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"OrdenTrabajo.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"OrdenTrabajo id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrdenTrabajo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajo"}}},"deprecated":false}},"/OrdenTrabajos/{id}/replace":{"post":{"tags":["OrdenTrabajo"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"OrdenTrabajo.replaceById__post_OrdenTrabajos_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajo"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajo"}}},"deprecated":false}},"/OrdenTrabajos/findOne":{"get":{"tags":["OrdenTrabajo"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"OrdenTrabajo.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajo"}}},"deprecated":false}},"/OrdenTrabajos/update":{"post":{"tags":["OrdenTrabajo"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"OrdenTrabajo.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrdenTrabajo"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/OrdenTrabajos/count":{"get":{"tags":["OrdenTrabajo"],"summary":"Count instances of the model matched by where from the data source.","operationId":"OrdenTrabajo.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/OrdenTrabajos/change-stream":{"post":{"tags":["OrdenTrabajo"],"summary":"Create a change stream.","operationId":"OrdenTrabajo.createChangeStream__post_OrdenTrabajos_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["OrdenTrabajo"],"summary":"Create a change stream.","operationId":"OrdenTrabajo.createChangeStream__get_OrdenTrabajos_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/OrdenTrabajoLineas":{"post":{"tags":["OrdenTrabajoLinea"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"OrdenTrabajoLinea.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajoLinea"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajoLinea"}}},"deprecated":false},"patch":{"tags":["OrdenTrabajoLinea"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"OrdenTrabajoLinea.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajoLinea"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajoLinea"}}},"deprecated":false},"put":{"tags":["OrdenTrabajoLinea"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"OrdenTrabajoLinea.replaceOrCreate__put_OrdenTrabajoLineas","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajoLinea"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajoLinea"}}},"deprecated":false},"get":{"tags":["OrdenTrabajoLinea"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"OrdenTrabajoLinea.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/OrdenTrabajoLinea"}}}},"deprecated":false}},"/OrdenTrabajoLineas/replaceOrCreate":{"post":{"tags":["OrdenTrabajoLinea"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"OrdenTrabajoLinea.replaceOrCreate__post_OrdenTrabajoLineas_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajoLinea"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajoLinea"}}},"deprecated":false}},"/OrdenTrabajoLineas/upsertWithWhere":{"post":{"tags":["OrdenTrabajoLinea"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"OrdenTrabajoLinea.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrdenTrabajoLinea"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajoLinea"}}},"deprecated":false}},"/OrdenTrabajoLineas/{id}/exists":{"get":{"tags":["OrdenTrabajoLinea"],"summary":"Check whether a model instance exists in the data source.","operationId":"OrdenTrabajoLinea.exists__get_OrdenTrabajoLineas_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/OrdenTrabajoLineas/{id}":{"head":{"tags":["OrdenTrabajoLinea"],"summary":"Check whether a model instance exists in the data source.","operationId":"OrdenTrabajoLinea.exists__head_OrdenTrabajoLineas_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["OrdenTrabajoLinea"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"OrdenTrabajoLinea.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajoLinea"}}},"deprecated":false},"put":{"tags":["OrdenTrabajoLinea"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"OrdenTrabajoLinea.replaceById__put_OrdenTrabajoLineas_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajoLinea"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajoLinea"}}},"deprecated":false},"delete":{"tags":["OrdenTrabajoLinea"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"OrdenTrabajoLinea.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["OrdenTrabajoLinea"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"OrdenTrabajoLinea.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"OrdenTrabajoLinea id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrdenTrabajoLinea"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajoLinea"}}},"deprecated":false}},"/OrdenTrabajoLineas/{id}/replace":{"post":{"tags":["OrdenTrabajoLinea"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"OrdenTrabajoLinea.replaceById__post_OrdenTrabajoLineas_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrdenTrabajoLinea"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajoLinea"}}},"deprecated":false}},"/OrdenTrabajoLineas/findOne":{"get":{"tags":["OrdenTrabajoLinea"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"OrdenTrabajoLinea.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrdenTrabajoLinea"}}},"deprecated":false}},"/OrdenTrabajoLineas/update":{"post":{"tags":["OrdenTrabajoLinea"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"OrdenTrabajoLinea.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrdenTrabajoLinea"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/OrdenTrabajoLineas/count":{"get":{"tags":["OrdenTrabajoLinea"],"summary":"Count instances of the model matched by where from the data source.","operationId":"OrdenTrabajoLinea.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/OrdenTrabajoLineas/change-stream":{"post":{"tags":["OrdenTrabajoLinea"],"summary":"Create a change stream.","operationId":"OrdenTrabajoLinea.createChangeStream__post_OrdenTrabajoLineas_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["OrdenTrabajoLinea"],"summary":"Create a change stream.","operationId":"OrdenTrabajoLinea.createChangeStream__get_OrdenTrabajoLineas_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/FormatoPublicacions":{"post":{"tags":["FormatoPublicacion"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"FormatoPublicacion.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FormatoPublicacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FormatoPublicacion"}}},"deprecated":false},"patch":{"tags":["FormatoPublicacion"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"FormatoPublicacion.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FormatoPublicacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FormatoPublicacion"}}},"deprecated":false},"put":{"tags":["FormatoPublicacion"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"FormatoPublicacion.replaceOrCreate__put_FormatoPublicacions","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FormatoPublicacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FormatoPublicacion"}}},"deprecated":false},"get":{"tags":["FormatoPublicacion"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"FormatoPublicacion.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/FormatoPublicacion"}}}},"deprecated":false}},"/FormatoPublicacions/replaceOrCreate":{"post":{"tags":["FormatoPublicacion"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"FormatoPublicacion.replaceOrCreate__post_FormatoPublicacions_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FormatoPublicacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FormatoPublicacion"}}},"deprecated":false}},"/FormatoPublicacions/upsertWithWhere":{"post":{"tags":["FormatoPublicacion"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"FormatoPublicacion.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/FormatoPublicacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FormatoPublicacion"}}},"deprecated":false}},"/FormatoPublicacions/{id}/exists":{"get":{"tags":["FormatoPublicacion"],"summary":"Check whether a model instance exists in the data source.","operationId":"FormatoPublicacion.exists__get_FormatoPublicacions_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/FormatoPublicacions/{id}":{"head":{"tags":["FormatoPublicacion"],"summary":"Check whether a model instance exists in the data source.","operationId":"FormatoPublicacion.exists__head_FormatoPublicacions_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["FormatoPublicacion"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"FormatoPublicacion.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FormatoPublicacion"}}},"deprecated":false},"put":{"tags":["FormatoPublicacion"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"FormatoPublicacion.replaceById__put_FormatoPublicacions_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FormatoPublicacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FormatoPublicacion"}}},"deprecated":false},"delete":{"tags":["FormatoPublicacion"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"FormatoPublicacion.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["FormatoPublicacion"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"FormatoPublicacion.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"FormatoPublicacion id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/FormatoPublicacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FormatoPublicacion"}}},"deprecated":false}},"/FormatoPublicacions/{id}/replace":{"post":{"tags":["FormatoPublicacion"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"FormatoPublicacion.replaceById__post_FormatoPublicacions_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FormatoPublicacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FormatoPublicacion"}}},"deprecated":false}},"/FormatoPublicacions/findOne":{"get":{"tags":["FormatoPublicacion"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"FormatoPublicacion.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FormatoPublicacion"}}},"deprecated":false}},"/FormatoPublicacions/update":{"post":{"tags":["FormatoPublicacion"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"FormatoPublicacion.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/FormatoPublicacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/FormatoPublicacions/count":{"get":{"tags":["FormatoPublicacion"],"summary":"Count instances of the model matched by where from the data source.","operationId":"FormatoPublicacion.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/FormatoPublicacions/change-stream":{"post":{"tags":["FormatoPublicacion"],"summary":"Create a change stream.","operationId":"FormatoPublicacion.createChangeStream__post_FormatoPublicacions_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["FormatoPublicacion"],"summary":"Create a change stream.","operationId":"FormatoPublicacion.createChangeStream__get_FormatoPublicacions_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Fechas":{"post":{"tags":["Fecha"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Fecha.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Fecha"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Fecha"}}},"deprecated":false},"patch":{"tags":["Fecha"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Fecha.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Fecha"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Fecha"}}},"deprecated":false},"put":{"tags":["Fecha"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Fecha.replaceOrCreate__put_Fechas","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Fecha"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Fecha"}}},"deprecated":false},"get":{"tags":["Fecha"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Fecha.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Fecha"}}}},"deprecated":false}},"/Fechas/replaceOrCreate":{"post":{"tags":["Fecha"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Fecha.replaceOrCreate__post_Fechas_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Fecha"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Fecha"}}},"deprecated":false}},"/Fechas/upsertWithWhere":{"post":{"tags":["Fecha"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Fecha.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Fecha"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Fecha"}}},"deprecated":false}},"/Fechas/{id}/exists":{"get":{"tags":["Fecha"],"summary":"Check whether a model instance exists in the data source.","operationId":"Fecha.exists__get_Fechas_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Fechas/{id}":{"head":{"tags":["Fecha"],"summary":"Check whether a model instance exists in the data source.","operationId":"Fecha.exists__head_Fechas_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Fecha"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Fecha.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Fecha"}}},"deprecated":false},"put":{"tags":["Fecha"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Fecha.replaceById__put_Fechas_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Fecha"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Fecha"}}},"deprecated":false},"delete":{"tags":["Fecha"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Fecha.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Fecha"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Fecha.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Fecha id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Fecha"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Fecha"}}},"deprecated":false}},"/Fechas/{id}/replace":{"post":{"tags":["Fecha"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Fecha.replaceById__post_Fechas_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Fecha"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Fecha"}}},"deprecated":false}},"/Fechas/findOne":{"get":{"tags":["Fecha"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Fecha.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Fecha"}}},"deprecated":false}},"/Fechas/update":{"post":{"tags":["Fecha"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Fecha.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Fecha"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Fechas/count":{"get":{"tags":["Fecha"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Fecha.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Fechas/change-stream":{"post":{"tags":["Fecha"],"summary":"Create a change stream.","operationId":"Fecha.createChangeStream__post_Fechas_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Fecha"],"summary":"Create a change stream.","operationId":"Fecha.createChangeStream__get_Fechas_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Clientes":{"post":{"tags":["Cliente"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Cliente.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Cliente"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Cliente"}}},"deprecated":false},"patch":{"tags":["Cliente"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Cliente.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Cliente"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Cliente"}}},"deprecated":false},"put":{"tags":["Cliente"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Cliente.replaceOrCreate__put_Clientes","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Cliente"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Cliente"}}},"deprecated":false},"get":{"tags":["Cliente"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Cliente.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Cliente"}}}},"deprecated":false}},"/Clientes/replaceOrCreate":{"post":{"tags":["Cliente"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Cliente.replaceOrCreate__post_Clientes_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Cliente"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Cliente"}}},"deprecated":false}},"/Clientes/upsertWithWhere":{"post":{"tags":["Cliente"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Cliente.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Cliente"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Cliente"}}},"deprecated":false}},"/Clientes/{id}/exists":{"get":{"tags":["Cliente"],"summary":"Check whether a model instance exists in the data source.","operationId":"Cliente.exists__get_Clientes_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Clientes/{id}":{"head":{"tags":["Cliente"],"summary":"Check whether a model instance exists in the data source.","operationId":"Cliente.exists__head_Clientes_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Cliente"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Cliente.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Cliente"}}},"deprecated":false},"put":{"tags":["Cliente"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Cliente.replaceById__put_Clientes_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Cliente"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Cliente"}}},"deprecated":false},"delete":{"tags":["Cliente"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Cliente.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Cliente"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Cliente.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Cliente id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Cliente"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Cliente"}}},"deprecated":false}},"/Clientes/{id}/replace":{"post":{"tags":["Cliente"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Cliente.replaceById__post_Clientes_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Cliente"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Cliente"}}},"deprecated":false}},"/Clientes/findOne":{"get":{"tags":["Cliente"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Cliente.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Cliente"}}},"deprecated":false}},"/Clientes/update":{"post":{"tags":["Cliente"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Cliente.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Cliente"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Clientes/count":{"get":{"tags":["Cliente"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Cliente.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Clientes/change-stream":{"post":{"tags":["Cliente"],"summary":"Create a change stream.","operationId":"Cliente.createChangeStream__post_Clientes_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Cliente"],"summary":"Create a change stream.","operationId":"Cliente.createChangeStream__get_Clientes_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Marcas":{"post":{"tags":["Marca"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Marca.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Marca"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Marca"}}},"deprecated":false},"patch":{"tags":["Marca"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Marca.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Marca"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Marca"}}},"deprecated":false},"put":{"tags":["Marca"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Marca.replaceOrCreate__put_Marcas","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Marca"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Marca"}}},"deprecated":false},"get":{"tags":["Marca"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Marca.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Marca"}}}},"deprecated":false}},"/Marcas/replaceOrCreate":{"post":{"tags":["Marca"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Marca.replaceOrCreate__post_Marcas_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Marca"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Marca"}}},"deprecated":false}},"/Marcas/upsertWithWhere":{"post":{"tags":["Marca"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Marca.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Marca"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Marca"}}},"deprecated":false}},"/Marcas/{id}/exists":{"get":{"tags":["Marca"],"summary":"Check whether a model instance exists in the data source.","operationId":"Marca.exists__get_Marcas_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Marcas/{id}":{"head":{"tags":["Marca"],"summary":"Check whether a model instance exists in the data source.","operationId":"Marca.exists__head_Marcas_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Marca"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Marca.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Marca"}}},"deprecated":false},"put":{"tags":["Marca"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Marca.replaceById__put_Marcas_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Marca"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Marca"}}},"deprecated":false},"delete":{"tags":["Marca"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Marca.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Marca"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Marca.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Marca id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Marca"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Marca"}}},"deprecated":false}},"/Marcas/{id}/replace":{"post":{"tags":["Marca"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Marca.replaceById__post_Marcas_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Marca"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Marca"}}},"deprecated":false}},"/Marcas/findOne":{"get":{"tags":["Marca"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Marca.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Marca"}}},"deprecated":false}},"/Marcas/update":{"post":{"tags":["Marca"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Marca.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Marca"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Marcas/count":{"get":{"tags":["Marca"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Marca.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Marcas/change-stream":{"post":{"tags":["Marca"],"summary":"Create a change stream.","operationId":"Marca.createChangeStream__post_Marcas_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Marca"],"summary":"Create a change stream.","operationId":"Marca.createChangeStream__get_Marcas_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Autorizacions":{"post":{"tags":["Autorizacion"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Autorizacion.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Autorizacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Autorizacion"}}},"deprecated":false},"patch":{"tags":["Autorizacion"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Autorizacion.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Autorizacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Autorizacion"}}},"deprecated":false},"put":{"tags":["Autorizacion"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Autorizacion.replaceOrCreate__put_Autorizacions","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Autorizacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Autorizacion"}}},"deprecated":false},"get":{"tags":["Autorizacion"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Autorizacion.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Autorizacion"}}}},"deprecated":false}},"/Autorizacions/replaceOrCreate":{"post":{"tags":["Autorizacion"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Autorizacion.replaceOrCreate__post_Autorizacions_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Autorizacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Autorizacion"}}},"deprecated":false}},"/Autorizacions/upsertWithWhere":{"post":{"tags":["Autorizacion"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Autorizacion.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Autorizacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Autorizacion"}}},"deprecated":false}},"/Autorizacions/{id}/exists":{"get":{"tags":["Autorizacion"],"summary":"Check whether a model instance exists in the data source.","operationId":"Autorizacion.exists__get_Autorizacions_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Autorizacions/{id}":{"head":{"tags":["Autorizacion"],"summary":"Check whether a model instance exists in the data source.","operationId":"Autorizacion.exists__head_Autorizacions_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Autorizacion"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Autorizacion.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Autorizacion"}}},"deprecated":false},"put":{"tags":["Autorizacion"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Autorizacion.replaceById__put_Autorizacions_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Autorizacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Autorizacion"}}},"deprecated":false},"delete":{"tags":["Autorizacion"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Autorizacion.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Autorizacion"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Autorizacion.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Autorizacion id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Autorizacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Autorizacion"}}},"deprecated":false}},"/Autorizacions/{id}/replace":{"post":{"tags":["Autorizacion"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Autorizacion.replaceById__post_Autorizacions_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Autorizacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Autorizacion"}}},"deprecated":false}},"/Autorizacions/findOne":{"get":{"tags":["Autorizacion"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Autorizacion.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Autorizacion"}}},"deprecated":false}},"/Autorizacions/update":{"post":{"tags":["Autorizacion"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Autorizacion.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Autorizacion"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Autorizacions/count":{"get":{"tags":["Autorizacion"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Autorizacion.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Autorizacions/change-stream":{"post":{"tags":["Autorizacion"],"summary":"Create a change stream.","operationId":"Autorizacion.createChangeStream__post_Autorizacions_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Autorizacion"],"summary":"Create a change stream.","operationId":"Autorizacion.createChangeStream__get_Autorizacions_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Usuarios":{"post":{"tags":["Usuario"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Usuario.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Usuario"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Usuario"}}},"deprecated":false},"patch":{"tags":["Usuario"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Usuario.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Usuario"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Usuario"}}},"deprecated":false},"put":{"tags":["Usuario"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Usuario.replaceOrCreate__put_Usuarios","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Usuario"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Usuario"}}},"deprecated":false},"get":{"tags":["Usuario"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Usuario.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Usuario"}}}},"deprecated":false}},"/Usuarios/replaceOrCreate":{"post":{"tags":["Usuario"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Usuario.replaceOrCreate__post_Usuarios_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Usuario"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Usuario"}}},"deprecated":false}},"/Usuarios/upsertWithWhere":{"post":{"tags":["Usuario"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Usuario.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Usuario"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Usuario"}}},"deprecated":false}},"/Usuarios/{id}/exists":{"get":{"tags":["Usuario"],"summary":"Check whether a model instance exists in the data source.","operationId":"Usuario.exists__get_Usuarios_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Usuarios/{id}":{"head":{"tags":["Usuario"],"summary":"Check whether a model instance exists in the data source.","operationId":"Usuario.exists__head_Usuarios_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Usuario"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Usuario.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Usuario"}}},"deprecated":false},"put":{"tags":["Usuario"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Usuario.replaceById__put_Usuarios_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Usuario"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Usuario"}}},"deprecated":false},"delete":{"tags":["Usuario"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Usuario.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Usuario"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Usuario.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Usuario id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Usuario"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Usuario"}}},"deprecated":false}},"/Usuarios/{id}/replace":{"post":{"tags":["Usuario"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Usuario.replaceById__post_Usuarios_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Usuario"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Usuario"}}},"deprecated":false}},"/Usuarios/findOne":{"get":{"tags":["Usuario"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Usuario.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Usuario"}}},"deprecated":false}},"/Usuarios/update":{"post":{"tags":["Usuario"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Usuario.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Usuario"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Usuarios/count":{"get":{"tags":["Usuario"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Usuario.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Usuarios/change-stream":{"post":{"tags":["Usuario"],"summary":"Create a change stream.","operationId":"Usuario.createChangeStream__post_Usuarios_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Usuario"],"summary":"Create a change stream.","operationId":"Usuario.createChangeStream__get_Usuarios_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Documentos":{"post":{"tags":["Documento"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Documento.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Documento"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Documento"}}},"deprecated":false},"patch":{"tags":["Documento"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Documento.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Documento"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Documento"}}},"deprecated":false},"put":{"tags":["Documento"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Documento.replaceOrCreate__put_Documentos","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Documento"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Documento"}}},"deprecated":false},"get":{"tags":["Documento"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Documento.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Documento"}}}},"deprecated":false}},"/Documentos/replaceOrCreate":{"post":{"tags":["Documento"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Documento.replaceOrCreate__post_Documentos_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Documento"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Documento"}}},"deprecated":false}},"/Documentos/upsertWithWhere":{"post":{"tags":["Documento"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Documento.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Documento"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Documento"}}},"deprecated":false}},"/Documentos/{id}/exists":{"get":{"tags":["Documento"],"summary":"Check whether a model instance exists in the data source.","operationId":"Documento.exists__get_Documentos_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Documentos/{id}":{"head":{"tags":["Documento"],"summary":"Check whether a model instance exists in the data source.","operationId":"Documento.exists__head_Documentos_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Documento"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Documento.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Documento"}}},"deprecated":false},"put":{"tags":["Documento"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Documento.replaceById__put_Documentos_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Documento"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Documento"}}},"deprecated":false},"delete":{"tags":["Documento"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Documento.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Documento"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Documento.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Documento id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Documento"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Documento"}}},"deprecated":false}},"/Documentos/{id}/replace":{"post":{"tags":["Documento"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Documento.replaceById__post_Documentos_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Documento"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Documento"}}},"deprecated":false}},"/Documentos/findOne":{"get":{"tags":["Documento"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Documento.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Documento"}}},"deprecated":false}},"/Documentos/update":{"post":{"tags":["Documento"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Documento.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Documento"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Documentos/count":{"get":{"tags":["Documento"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Documento.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Documentos/change-stream":{"post":{"tags":["Documento"],"summary":"Create a change stream.","operationId":"Documento.createChangeStream__post_Documentos_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Documento"],"summary":"Create a change stream.","operationId":"Documento.createChangeStream__get_Documentos_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Emitibles":{"post":{"tags":["Emitible"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Emitible.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Emitible"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Emitible"}}},"deprecated":false},"patch":{"tags":["Emitible"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Emitible.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Emitible"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Emitible"}}},"deprecated":false},"put":{"tags":["Emitible"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Emitible.replaceOrCreate__put_Emitibles","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Emitible"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Emitible"}}},"deprecated":false},"get":{"tags":["Emitible"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Emitible.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Emitible"}}}},"deprecated":false}},"/Emitibles/replaceOrCreate":{"post":{"tags":["Emitible"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Emitible.replaceOrCreate__post_Emitibles_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Emitible"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Emitible"}}},"deprecated":false}},"/Emitibles/upsertWithWhere":{"post":{"tags":["Emitible"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Emitible.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Emitible"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Emitible"}}},"deprecated":false}},"/Emitibles/{id}/exists":{"get":{"tags":["Emitible"],"summary":"Check whether a model instance exists in the data source.","operationId":"Emitible.exists__get_Emitibles_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Emitibles/{id}":{"head":{"tags":["Emitible"],"summary":"Check whether a model instance exists in the data source.","operationId":"Emitible.exists__head_Emitibles_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Emitible"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Emitible.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Emitible"}}},"deprecated":false},"put":{"tags":["Emitible"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Emitible.replaceById__put_Emitibles_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Emitible"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Emitible"}}},"deprecated":false},"delete":{"tags":["Emitible"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Emitible.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Emitible"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Emitible.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Emitible id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Emitible"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Emitible"}}},"deprecated":false}},"/Emitibles/{id}/replace":{"post":{"tags":["Emitible"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Emitible.replaceById__post_Emitibles_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Emitible"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Emitible"}}},"deprecated":false}},"/Emitibles/findOne":{"get":{"tags":["Emitible"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Emitible.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Emitible"}}},"deprecated":false}},"/Emitibles/update":{"post":{"tags":["Emitible"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Emitible.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Emitible"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Emitibles/count":{"get":{"tags":["Emitible"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Emitible.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Emitibles/change-stream":{"post":{"tags":["Emitible"],"summary":"Create a change stream.","operationId":"Emitible.createChangeStream__post_Emitibles_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Emitible"],"summary":"Create a change stream.","operationId":"Emitible.createChangeStream__get_Emitibles_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}}},"tags":[{"name":"Master2"},{"name":"Master"},{"name":"Archivo"},{"name":"Recurso"},{"name":"MasterClasificacion"},{"name":"Campanna"},{"name":"CampannaFormato"},{"name":"CampannaPropuesta"},{"name":"LogActividad"},{"name":"Contenedor"},{"name":"OrdenTrabajo"},{"name":"OrdenTrabajoLinea"},{"name":"FormatoPublicacion"},{"name":"Fecha"},{"name":"Cliente"},{"name":"Marca"},{"name":"Autorizacion"},{"name":"Usuario"},{"name":"Documento"},{"name":"Emitible"}],"consumes":["application/json","application/x-www-form-urlencoded","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml","application/javascript","text/javascript"],"definitions":{"Master2":{"properties":{"idMaster2":{"type":"number","format":"double"},"codMasterExt":{"maxLength":100,"type":"string"},"idCampannaFormato":{"type":"number","format":"double"},"idCliente":{"type":"number","format":"double"},"indEstado":{"maxLength":100,"type":"string"},"fechaRecepcion":{"type":"string","format":"date-time"},"idArchivo":{"type":"number","format":"double"},"nomArchivo":{"maxLength":200,"type":"string"},"ubicacion":{"maxLength":2000,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"},"indDemo":{"maxLength":1,"type":"string"},"desMotivoMejora":{"maxLength":200,"type":"string"},"titArchivo":{"maxLength":100,"type":"string"},"desDescripcion":{"maxLength":500,"type":"string"}},"required":["idMaster2","idCampannaFormato","idCliente","indEstado","fechaRecepcion","idArchivo","nomArchivo","ubicacion","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud","indDemo","titArchivo","desDescripcion"],"additionalProperties":false},"x-any":{"properties":{}},"Master":{"properties":{"idMaster":{"type":"number","format":"double"},"codMasterExt":{"maxLength":100,"type":"string"},"idOrdenTrabajoLinea":{"type":"number","format":"double"},"idCliente":{"type":"number","format":"double"},"indEstado":{"maxLength":100,"type":"string"},"fechaRecepcion":{"type":"string","format":"date-time"},"idArchivo":{"type":"number","format":"double"},"nomArchivo":{"maxLength":200,"type":"string"},"ubicacion":{"maxLength":2000,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"},"indDemo":{"maxLength":1,"type":"string"},"desMotivoMejora":{"maxLength":200,"type":"string"},"titArchivo":{"maxLength":100,"type":"string"},"desDescripcion":{"maxLength":500,"type":"string"}},"required":["idMaster","idCliente","indEstado","fechaRecepcion","idArchivo","nomArchivo","ubicacion","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud","indDemo","titArchivo","desDescripcion"],"additionalProperties":false},"Archivo":{"properties":{"idArchivo":{"type":"number","format":"double"},"codArchivo":{"maxLength":100,"type":"string"},"nomArchivo":{"maxLength":200,"type":"string"},"idContenedor":{"type":"number","format":"double"},"ubicacion":{"maxLength":200,"type":"string"},"tipoArchivo":{"maxLength":100,"type":"string"},"peso":{"type":"number","format":"double"},"duracion":{"type":"number","format":"double"},"resolucion":{"maxLength":50,"type":"string"},"ancho":{"type":"number","format":"double"},"alto":{"type":"number","format":"double"},"fecIngreso":{"type":"string","format":"date-time"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"}},"required":["idArchivo","codArchivo","nomArchivo","idContenedor","ubicacion","tipoArchivo","peso","fecIngreso","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud"],"additionalProperties":false},"Recurso":{"properties":{"idRecurso":{"type":"number","format":"double"},"codRecursoExt":{"maxLength":100,"type":"string"},"idMaster":{"type":"number","format":"double"},"idCliente":{"type":"number","format":"double"},"indEstado":{"maxLength":100,"type":"string"},"fechaRecepcion":{"type":"string","format":"date-time"},"idArchivo":{"type":"number","format":"double"},"nomArchivo":{"maxLength":200,"type":"string"},"ubicacion":{"maxLength":2000,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"},"titArchivo":{"maxLength":100,"type":"string"},"desDescripcion":{"maxLength":500,"type":"string"},"idMaster2":{"type":"number","format":"double"}},"required":["idRecurso","idCliente","indEstado","fechaRecepcion","idArchivo","nomArchivo","ubicacion","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud","titArchivo","desDescripcion","idMaster2"],"additionalProperties":false},"MasterClasificacion":{"properties":{"idMasterClasificacion":{"type":"number","format":"double"},"idMaster":{"type":"number","format":"double"},"indClasificador":{"maxLength":100,"type":"string"},"fechaClasificacion":{"type":"string","format":"date-time"},"desMotivo":{"maxLength":200,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"}},"required":["idMasterClasificacion","idMaster","indClasificador","fechaClasificacion","desMotivo","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud"],"additionalProperties":false},"Campanna":{"properties":{"idCampanna":{"type":"number","format":"double"},"codCampannaExt":{"maxLength":100,"type":"string"},"nomCampanna":{"maxLength":100,"type":"string"},"desDescripcion":{"maxLength":500,"type":"string"},"desBriefing":{"maxLength":2000,"type":"string"},"idCliente":{"type":"number","format":"double"},"idMarca":{"type":"number","format":"double"},"fecInicio":{"type":"string","format":"date-time"},"fecFin":{"type":"string","format":"date-time"},"indEstado":{"maxLength":100,"type":"string"},"idDocumento":{"type":"number","format":"double"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"},"fechaRecepcion":{"type":"string","format":"date-time"}},"required":["idCampanna","nomCampanna","desDescripcion","idCliente","indEstado","idDocumento","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud","fechaRecepcion"],"additionalProperties":false},"CampannaFormato":{"properties":{"idCampannaFormato":{"type":"number","format":"double"},"codCampannaFormatoExt":{"maxLength":100,"type":"string"},"idCampanna":{"type":"number","format":"double"},"idFormatoPublicacion":{"type":"number","format":"double"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"}},"required":["idCampannaFormato","idCampanna","idFormatoPublicacion","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud"],"additionalProperties":false},"CampannaPropuesta":{"properties":{"idCampannaPropuesta":{"type":"number","format":"double"},"codPropuestaExt":{"maxLength":100,"type":"string"},"nomPropuesta":{"maxLength":100,"type":"string"},"idCampanna":{"type":"number","format":"double"},"indSeleccionado":{"maxLength":1,"type":"string"},"indEstado":{"maxLength":100,"type":"string"},"fechaRecepcion":{"type":"string","format":"date-time"},"idDocumento":{"type":"number","format":"double"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"},"desDescripcion":{"maxLength":500,"type":"string"}},"required":["idCampannaPropuesta","nomPropuesta","idCampanna","indEstado","fechaRecepcion","desDescripcion"],"additionalProperties":false},"LogActividad":{"properties":{"idLogActividad":{"type":"number","format":"double"},"idCampanna":{"type":"number","format":"double"},"idOrdenTrabajo":{"type":"number","format":"double"},"indAccion":{"maxLength":100,"type":"string"},"fecHora":{"type":"string","format":"date-time"},"indEstado":{"maxLength":100,"type":"string"},"destinatario":{"maxLength":100,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"}},"required":["idLogActividad","idCampanna","indAccion","fecHora","indEstado","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud"],"additionalProperties":false},"Contenedor":{"properties":{"idContenedor":{"type":"number","format":"double"},"idCliente":{"type":"number","format":"double"},"nomContenedor":{"maxLength":100,"type":"string"},"nomFisicoContenedor":{"maxLength":250,"type":"string"},"indContenido":{"maxLength":100,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"}},"required":["idContenedor","idCliente","nomContenedor","indContenido","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud"],"additionalProperties":false},"OrdenTrabajo":{"properties":{"idOrdenTrabajo":{"type":"number","format":"double"},"idCampannaPropuesta":{"type":"number","format":"double"},"idMaster":{"type":"number","format":"double"},"fecOrden":{"type":"string","format":"date-time"},"indTipo":{"maxLength":100,"type":"string"},"indEstadoOt":{"maxLength":100,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"},"idCampanna":{"type":"number","format":"double"}},"required":["idOrdenTrabajo","fecOrden"],"additionalProperties":false},"OrdenTrabajoLinea":{"properties":{"idOrdenTrabajoLinea":{"type":"number","format":"double"},"idOrdenTrabajo":{"type":"number","format":"double"},"idCampannaFormato":{"type":"number","format":"double"},"fecRecepcion":{"type":"string","format":"date-time"},"indEstado":{"maxLength":100,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"},"idMaster":{"type":"number","format":"double"}},"required":["idOrdenTrabajoLinea","idOrdenTrabajo","idCampannaFormato","fecRecepcion"],"additionalProperties":false},"FormatoPublicacion":{"properties":{"idFormatoPublicacion":{"type":"number","format":"double"},"codFormatoExt":{"maxLength":100,"type":"string"},"nomFormato":{"maxLength":100,"type":"string"},"desObservaciones":{"maxLength":2000,"type":"string"},"indPrincipal":{"maxLength":1,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"},"id":{"type":"number","format":"double"}},"required":["idFormatoPublicacion","nomFormato","indPrincipal","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud"],"additionalProperties":false},"Fecha":{"properties":{"idFecha":{"type":"number","format":"double"},"fecha":{"type":"string","format":"date-time"}},"required":["idFecha","fecha"],"additionalProperties":false},"Cliente":{"properties":{"idCliente":{"type":"number","format":"double"},"codClienteExt":{"maxLength":100,"type":"string"},"nomCliente":{"maxLength":100,"type":"string"},"desObservaciones":{"maxLength":2000,"type":"string"},"correoElectronico":{"maxLength":100,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"}},"required":["idCliente","nomCliente"],"additionalProperties":false},"Marca":{"properties":{"idMarca":{"type":"number","format":"double"},"idCliente":{"type":"number","format":"double"},"codMarcaExt":{"maxLength":100,"type":"string"},"nomMarca":{"maxLength":100,"type":"string"},"desObservaciones":{"maxLength":2000,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"}},"required":["idMarca","idCliente","nomMarca","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud"],"additionalProperties":false},"Autorizacion":{"properties":{"idAutorizacion":{"maxLength":100,"type":"number","format":"double"},"idUsuario":{"type":"number","format":"double"},"autorizacion":{"maxLength":100,"type":"string"}},"required":["idAutorizacion","idUsuario","autorizacion"],"additionalProperties":false},"Usuario":{"properties":{"idUsuario":{"type":"number","format":"double"},"nomUsuario":{"maxLength":100,"type":"string"},"contrasena":{"maxLength":60,"type":"string"},"activo":{"type":"number","format":"double"}},"required":["idUsuario","nomUsuario","contrasena"],"additionalProperties":false},"Documento":{"properties":{"idDocumento":{"type":"number","format":"double"},"codDocumentoExt":{"maxLength":100,"type":"string"},"idCliente":{"type":"number","format":"double"},"indEstado":{"maxLength":100,"type":"string"},"fechaRecepcion":{"type":"string","format":"date-time"},"idArchivo":{"type":"number","format":"double"},"nomArchivo":{"maxLength":200,"type":"string"},"ubicacion":{"maxLength":2000,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"}},"required":["idDocumento","codDocumentoExt","idCliente","indEstado","fechaRecepcion","idArchivo","nomArchivo","ubicacion","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud"],"additionalProperties":false},"Emitible":{"properties":{"idEmitible":{"type":"number","format":"double"},"codEmitibleExt":{"maxLength":100,"type":"string"},"idOrdenTrabajoLinea":{"type":"number","format":"double"},"idCliente":{"type":"number","format":"double"},"indEstado":{"maxLength":100,"type":"string"},"fechaRecepcion":{"type":"string","format":"date-time"},"idArchivo":{"type":"number","format":"double"},"nomArchivo":{"maxLength":200,"type":"string"},"ubicacion":{"maxLength":2000,"type":"string"},"usuarioAud":{"maxLength":30,"type":"string"},"fecAud":{"type":"string","format":"date-time"},"usuarioCreaAud":{"maxLength":30,"type":"string"},"fecCreaAud":{"type":"string","format":"date-time"}},"required":["idEmitible","idOrdenTrabajoLinea","idCliente","indEstado","fechaRecepcion","idArchivo","nomArchivo","ubicacion","usuarioAud","fecAud","usuarioCreaAud","fecCreaAud"],"additionalProperties":false}}}